Input Code:
------------------------
.data
val1: .word 10
val2: .word -5
result: .space 2
.text
# Load val1 into register $1
LW $1, 0($0)

# Load val2 into register $2
LW $2, 1($0)

# Perform addition: $3 = $1 + $2
ADD $3, $1, $2

# Store the result of addition into 'result' memory location
SW $3, 3($0)

# Load the result from memory back into register $4 for verification
LW $4, 3($0)
 ------------------------
Output binary:
 ------------------------
v2.0 raw
0840
0880
3A92
680A
0840
3849
0880
3ED2
680A
0840
3889
6808
3849
6808
3849
0840
0880
6001
6042
08CA
68C3
60C4

 ------------------------
Debug Log:
 ------------------------

[18] Offset value not found in LW $2, 1$0)
ADD $1, $0, $0 : 0000100001000000 | 0840
ADD $2, $0, $0 : 0000100010000000 | 0880
ADDI $2, $2, 10 : 0011101010010010 | 3A92
SW $2, 0($1) : 0110100000001010 | 680A
ADD $1, $0, $0 : 0000100001000000 | 0840
ADDI $1, $1, 1 : 0011100001001001 | 3849
ADD $2, $0, $0 : 0000100010000000 | 0880
ADDI $2, $2, -5 : 0011111011010010 | 3ED2
SW $2, 0($1) : 0110100000001010 | 680A
ADD $1, $0, $0 : 0000100001000000 | 0840
ADDI $1, $1, 2 : 0011100010001001 | 3889
SW $0, 0($1) : 0110100000001000 | 6808
ADDI $1, $1, 1 : 0011100001001001 | 3849
SW $0, 0($1) : 0110100000001000 | 6808
ADDI $1, $1, 1 : 0011100001001001 | 3849
ADD $1, $0, $0 : 0000100001000000 | 0840
ADD $2, $0, $0 : 0000100010000000 | 0880
LW $1, 0($0) : 0110000000000001 | 6001
LW $2, 1($0) : 0110000001000010 | 6042
ADD $3, $1, $2 : 0000100011001010 | 08CA
SW $3, 3($0) : 0110100011000011 | 68C3
LW $4, 3($0) : 0110000011000100 | 60C4
