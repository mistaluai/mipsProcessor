Input Code:
------------------------
.data
arraySize: .word 30 0
.text
main:
	jal initialize_array
	jal sum_array
	jal halt_sim

initialize_array:
	add $1, $0, $0 #initialize counter
	lw $2, 0($0)
	init_loop:
		sw $1, 1($1)
		addi $1, $1, 1
		blt $1, $2, init_loop
	jr $7
sum_array:
	add $1, $0, $0 #initialize counter
	lw $2, 0($0)
	add $4, $0, $0 #initialize output register
	sum_loop:
		lw $3, 1($1)
		add $4, $4, $3
		addi $1, $1, 1
		blt $1, $2, sum_loop
	jr $7
halt_sim:
	j halt_sim
		
 ------------------------
Output binary:
 ------------------------
v2.0 raw
9000
280B
9000
2F8A
681A
0840
0880
08C0
F803
F808
F80F
0840
6002
6849
3849
878A
1038
0840
6002
0900
604B
0923
3849
874A
1038
F000

 ------------------------
Debug Log:
 ------------------------

Index 2 out of bounds for length 2
LUI 0 : 1001000000000000 | 9000
ORI $3, $1, 0 : 0010100000001011 | 280B
LUI 0 : 1001000000000000 | 9000
ORI $2, $1, 30 : 0010111110001010 | 2F8A
SW $2, 0($3) : 0110100000011010 | 681A
ADD $1, $0, $0 : 0000100001000000 | 0840
ADD $2, $0, $0 : 0000100010000000 | 0880
ADD $3, $0, $0 : 0000100011000000 | 08C0
jal initialize_array : 1111100000000011 | F803
jal sum_array : 1111100000001000 | F808
jal halt_sim : 1111100000001111 | F80F
add $1, $0, $0 : 0000100001000000 | 0840
lw $2, 0($0) : 0110000000000010 | 6002
sw $1, 1($1) : 0110100001001001 | 6849
addi $1, $1, 1 : 0011100001001001 | 3849
blt $1, $2, init_loop : 1000011110001010 | 878A
jr $7 : 0001000000111000 | 1038
add $1, $0, $0 : 0000100001000000 | 0840
lw $2, 0($0) : 0110000000000010 | 6002
add $4, $0, $0 : 0000100100000000 | 0900
lw $3, 1($1) : 0110000001001011 | 604B
add $4, $4, $3 : 0000100100100011 | 0923
addi $1, $1, 1 : 0011100001001001 | 3849
blt $1, $2, sum_loop : 1000011101001010 | 874A
jr $7 : 0001000000111000 | 1038
j halt_sim : 1111000000000000 | F000
