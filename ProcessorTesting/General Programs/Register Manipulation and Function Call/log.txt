Input Code:
------------------------
.data
first: .word 1 0
second: .word 1 1
third: .word 10 2
fourth: .word 17162 60
fifth: .word 29506 61
.text
lui 900
addi $5, $1, 13
xor $3, $1, $5
lw $1, 0($0)  #reg[1] <- mem[0]
lw $2, 1($0) #reg[2] <- mem[1]
lw $3, 2($0) #reg[3] <- mem[2]
addi $4, $4, 10
sub $4, $4, $4
L2:
add $4, $2, $4
slt $6, $2, $3 
beq $6, $0, L1
add $2, $1, $2 
beq $0, $0, L2
L1:
sw $4, 0($0) #mem[0] <- reg[4]
jal func 
sll $3, $2, 6
ROR $6, $3, 3
halt:
beq $0, $0, halt #program is over, keep looping back to here
func:
or $5, $2, $3
lw $1, 0($0)
lw $2, 5($1)
lw $3, 6($1)
and $4, $2, $3 
sw $4, 0($0) #mem[0] <- reg[4]
Jr $7
 ------------------------
Output binary:
 ------------------------
v2.0 raw
9000
280B
9000
284A
681A
9000
284B
9000
284A
681A
9000
288B
9000
2A8A
681A
9001
2F0B
9218
2A8A
681A
9001
2F4B
939A
288A
681A
0840
0880
08C0
9384
3B4D
04CD
6001
6042
6083
3AA4
0B24
0914
0D93
70F0
088A
7700
6804
F804
4193
58DE
7000
0353
6001
614A
618B
0113
6804
1038

 ------------------------
Debug Log:
 ------------------------

LUI 0 : 1001000000000000 | 9000
ORI $3, $1, 0 : 0010100000001011 | 280B
LUI 0 : 1001000000000000 | 9000
ORI $2, $1, 30 : 0010111110001010 | 2F8A
SW $2, 0($3) : 0110100000011010 | 681A
ADD $1, $0, $0 : 0000100001000000 | 0840
ADD $2, $0, $0 : 0000100010000000 | 0880
ADD $3, $0, $0 : 0000100011000000 | 08C0
jal initialize_array : 1111100000000011 | F803
jal sum_array : 1111100000001000 | F808
jal halt_sim : 1111100000001111 | F80F
add $1, $0, $0 : 0000100001000000 | 0840
lw $2, 0($0) : 0110000000000010 | 6002
sw $1, 1($1) : 0110100001001001 | 6849
addi $1, $1, 1 : 0011100001001001 | 3849
blt $1, $2, init_loop : 1000011110001010 | 878A
jr $7 : 0001000000111000 | 1038
add $1, $0, $0 : 0000100001000000 | 0840
lw $2, 0($0) : 0110000000000010 | 6002
add $4, $0, $0 : 0000100100000000 | 0900
lw $3, 1($1) : 0110000001001011 | 604B
add $4, $4, $3 : 0000100100100011 | 0923
addi $1, $1, 1 : 0011100001001001 | 3849
blt $1, $2, sum_loop : 1000011101001010 | 874A
jr $7 : 0001000000111000 | 1038
j halt_sim : 1111000000000000 | F000

LUI 0 : 1001000000000000 | 9000
ORI $3, $1, 0 : 0010100000001011 | 280B
LUI 0 : 1001000000000000 | 9000
ORI $2, $1, 30 : 0010111110001010 | 2F8A
SW $2, 0($3) : 0110100000011010 | 681A
ADD $1, $0, $0 : 0000100001000000 | 0840
ADD $2, $0, $0 : 0000100010000000 | 0880
ADD $3, $0, $0 : 0000100011000000 | 08C0
jal initialize_array : 1111100000000011 | F803
jal sum_array : 1111100000001000 | F808
jal halt_sim : 1111100000001111 | F80F
add $1, $0, $0 : 0000100001000000 | 0840
lw $2, 0($0) : 0110000000000010 | 6002
sw $1, 1($1) : 0110100001001001 | 6849
addi $1, $1, 1 : 0011100001001001 | 3849
blt $1, $2, init_loop : 1000011110001010 | 878A
jr $7 : 0001000000111000 | 1038
add $1, $0, $0 : 0000100001000000 | 0840
lw $2, 0($0) : 0110000000000010 | 6002
add $4, $0, $0 : 0000100100000000 | 0900
lw $3, 1($1) : 0110000001001011 | 604B
add $4, $4, $3 : 0000100100100011 | 0923
addi $1, $1, 1 : 0011100001001001 | 3849
blt $1, $2, sum_loop : 1000011101001010 | 874A
jr $7 : 0001000000111000 | 1038
j halt_sim : 1111000000000000 | F000

LUI 0 : 1001000000000000 | 9000
ORI $3, $1, 0 : 0010100000001011 | 280B
LUI 0 : 1001000000000000 | 9000
ORI $2, $1, 1 : 0010100001001010 | 284A
SW $2, 0($3) : 0110100000011010 | 681A
LUI 0 : 1001000000000000 | 9000
ORI $3, $1, 1 : 0010100001001011 | 284B
LUI 0 : 1001000000000000 | 9000
ORI $2, $1, 1 : 0010100001001010 | 284A
SW $2, 0($3) : 0110100000011010 | 681A
LUI 0 : 1001000000000000 | 9000
ORI $3, $1, 2 : 0010100010001011 | 288B
LUI 0 : 1001000000000000 | 9000
ORI $2, $1, 10 : 0010101010001010 | 2A8A
SW $2, 0($3) : 0110100000011010 | 681A
LUI 1 : 1001000000000001 | 9001
ORI $3, $1, 28 : 0010111100001011 | 2F0B
LUI 536 : 1001001000011000 | 9218
ORI $2, $1, 10 : 0010101010001010 | 2A8A
SW $2, 0($3) : 0110100000011010 | 681A
LUI 1 : 1001000000000001 | 9001
ORI $3, $1, 29 : 0010111101001011 | 2F4B
LUI 922 : 1001001110011010 | 939A
ORI $2, $1, 2 : 0010100010001010 | 288A
SW $2, 0($3) : 0110100000011010 | 681A
ADD $1, $0, $0 : 0000100001000000 | 0840
ADD $2, $0, $0 : 0000100010000000 | 0880
ADD $3, $0, $0 : 0000100011000000 | 08C0
lui 900 : 1001001110000100 | 9384
addi $5, $1, 13 : 0011101101001101 | 3B4D
xor $3, $1, $5 : 0000010011001101 | 04CD
lw $1, 0($0) : 0110000000000001 | 6001
lw $2, 1($0) : 0110000001000010 | 6042
lw $3, 2($0) : 0110000010000011 | 6083
addi $4, $4, 10 : 0011101010100100 | 3AA4
sub $4, $4, $4 : 0000101100100100 | 0B24
add $4, $2, $4 : 0000100100010100 | 0914
slt $6, $2, $3 : 0000110110010011 | 0D93
beq $6, $0, L1 : 0111000011110000 | 70F0
add $2, $1, $2 : 0000100010001010 | 088A
beq $0, $0, L2 : 0111011100000000 | 7700
sw $4, 0($0) : 0110100000000100 | 6804
jal func : 1111100000000100 | F804
sll $3, $2, 6 : 0100000110010011 | 4193
ROR $6, $3, 3 : 0101100011011110 | 58DE
beq $0, $0, halt : 0111000000000000 | 7000
or $5, $2, $3 : 0000001101010011 | 0353
lw $1, 0($0) : 0110000000000001 | 6001
lw $2, 5($1) : 0110000101001010 | 614A
lw $3, 6($1) : 0110000110001011 | 618B
and $4, $2, $3 : 0000000100010011 | 0113
sw $4, 0($0) : 0110100000000100 | 6804
Jr $7 : 0001000000111000 | 1038
