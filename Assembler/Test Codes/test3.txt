Input Code:
------------------------
# Initialize registers with immediate values
ADDI $1, $0, 10    # Load immediate 10 into register 1
ADDI $2, $0, -8    # Load immediate -8 into register 2

# Load values from memory
LW $3, 0($1)         # Load value from memory at address stored in register 1 into register 3
LW $4, 4($2)         # Load value from memory at address stored in register 2 + 4 into register 4

# Subtract values and store result
SUB $5, $3, $4       # Subtract value in register 4 from register 3, store result in register 5

# Store result in memory
SW $5, 8($1)         # Store value from register 5 into memory at address stored in register 1 + 8

# Check if result is zero
BNE $5, $0, result_not_zero     # Branch if result is not zero
J result_is_zero      # Jump to result_is_zero if result is zero

# Subroutine for result being zero
result_is_zero:
    ADD $6, $5, $0    # Some operation
    JAL exit          # Jump and link to exit subroutine

# Subroutine for result not being zero
result_not_zero:
    ADD $6, $5, $0    # Some other operation
    JAL exit          # Jump and link to exit subroutine

# Exit subroutine
exit:
    # Some exit operations

# Loop example
ADDI $7, $0, 0       # Load immediate 0 into register 7 (initialize loop counter)
loop_start:
    ADDI $7, $7, 1    # Increment loop counter
    ADDI $6, $0, 10   # Load immediate 10 into register 6
    SLT $6, $7, $6    # Set register 6 to 1 if register 7 is less than 10, otherwise set it to 0
    BNE $6, $0, loop_start  # Branch back to loop_start if register 7 < 10
loop_end:
    # End of loop
 ------------------------
Output binary:
 ------------------------
3A81
3E02
600B
6114
0B5C
6A0D
7928
F001
09A8
F803
09A8
F801
3807
387F
3A86
0DBE
7F70

 ------------------------
Debug Log:
 ------------------------

ADDI $1, $0, 10 : 0011101010000001 | 3A81
ADDI $2, $0, -8 : 0011111000000010 | 3E02
LW $3, 0($1) : 0110000000001011 | 600B
LW $4, 4($2) : 0110000100010100 | 6114
SUB $5, $3, $4 : 0000101101011100 | 0B5C
SW $5, 8($1) : 0110101000001101 | 6A0D
BNE $5, $0, result_not_zero : 0111100100101000 | 7928
J result_is_zero : 1111000000000001 | F001
ADD $6, $5, $0 : 0000100110101000 | 09A8
JAL exit : 1111100000000011 | F803
ADD $6, $5, $0 : 0000100110101000 | 09A8
JAL exit : 1111100000000001 | F801
ADDI $7, $0, 0 : 0011100000000111 | 3807
ADDI $7, $7, 1 : 0011100001111111 | 387F
ADDI $6, $0, 10 : 0011101010000110 | 3A86
SLT $6, $7, $6 : 0000110110111110 | 0DBE
BNE $6, $0, loop_start : 0111111101110000 | 7F70
